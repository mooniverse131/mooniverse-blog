plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.mooniverse.blog'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

bootBuildImage {
    imageName = 'mooniverse0131/mooniverse-blog-server' // 생성할 이미지 이름 설정
    publish = true // 이미지를 로컬에만 빌드하려면 false로 설정
    docker {
        // Docker 설정 (필요에 따라 추가)
		host = 'npipe:////./pipe/docker_engine'
    }
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	implementation 'javax.annotation:javax.annotation-api:1.3.2'  // @PostConstruct 사용을 위한 의존성 추가

    // AWS SDK for Java 2.x 의존성 추가
    implementation platform('software.amazon.awssdk:bom:2.15.0') // BOM을 사용하여 버전 관리
    implementation 'software.amazon.awssdk:secretsmanager'
    implementation 'software.amazon.awssdk:regions'
    implementation 'software.amazon.awssdk:utils'

}

tasks.named('test') {
	useJUnitPlatform()
}
